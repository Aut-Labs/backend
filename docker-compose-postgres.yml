version: '3.8'
services:
  ipfs:
    image: ipfs/go-ipfs:v0.17.0
    container_name: ipfs
    ports:
      - '5001:5001'
    volumes:
      - ./volumes/ipfs:/data/ipfs
    networks:
      - backend
  postgres:
    image: postgres:14
    container_name: postgres
    ports:
      - '5432:5432'
    command:
      [
        "postgres",
        "-cshared_preload_libraries=pg_stat_statements",
        "-cmax_connections=200"
      ]
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      PGDATA: "/var/lib/postgresql/data"
      POSTGRES_INITDB_ARGS: "-E UTF8 --locale=C"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    volumes:
      - ./volumes/postgres:/var/lib/postgresql/data
    networks:
      - backend
  pgadmin:
    image: dpage/pgadmin4:4.23
    container_name: pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
      PGADMIN_LISTEN_PORT: 80
    ports:
      - '15432:80'
    volumes:
      - ./volumes/pgadmin:/var/lib/pgadmin
      - ./volumes/servers.json:/pgadmin4/servers.json
    depends_on:
      - postgres
    networks:
      - backend

networks:
  backend:
    name: backend
    external: true
