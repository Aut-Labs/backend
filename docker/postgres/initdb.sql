create extension if not exists pgcrypto;
create extension if not exists citext;

-- ** tables **

create table public.interaction (
    id integer primary key generated by default as identity,
    interaction_hash varchar(66) unique not null,
    chain_id bigint not null,
    selector varchar(6) not null,
    tx_to varchar(42) not null,
    unique (chain_id, tx_to, selector)
);

create table public.interaction_approve (
    id integer primary key generated by default as identity,
    interaction_hash varchar(66) not null references 
        public.interaction(interaction_hash) on delete cascade,
    eth_address varchar(42) not null,
    message_ citext not null,
    signature_hex citext not null,  -- alter to varchar
    unique (interaction_hash, eth_address)
);

create table public.interaction_tx (
    id bigint primary key generated by default as identity,
    interaction_hash varchar(66) not null references
        public.interaction(interaction_hash) on delete cascade,
    eth_address varchar(42) not null,
    tx_hash varchar(66) not null,
    block_id bigint not null,
    unique (interaction_hash, tx_hash)
);

create table public.moralis_scan_checkpoints (
    id integer primary key generated by default as identity,
    interaction_hash varchar(66) not null references
        public.interaction(interaction_hash) on delete cascade,
    eth_address varchar(42) not null,
    block_id bigint not null
);

-- ** indices **

create index interaction_approve_interaction_hash_index 
    on public.interaction_approve 
    using hash (interaction_hash)
;

create index interaction_approve_eth_address_index 
    on public.interaction_approve 
    using hash (eth_address)
;

create index interaction_tx_interaction_hash_index 
    on public.interaction_tx 
    using hash (interaction_hash)
;

create index interaction_tx_eth_address_index 
    on public.interaction_tx 
    using hash (eth_address)
;

create index interaction_tx_block_id 
    on public.interaction_tx 
    using btree (block_id)
;
